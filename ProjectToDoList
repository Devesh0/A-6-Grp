ROLES:
Martin: Map.
Devesh: General programming. 
Tomasz: Map/map obstacles.  
Josh: General programming. 
Guanshen: General programming?
Aiman: Spaceship parts + OOP code behind it (with Josh)

Spaceship parts:
- Fuel (http://goo.gl/3fTbdL)
- CPU (http://goo.gl/1BNZMC)
- Engine (http://goo.gl/mnGiX7)  
- Batteries (http://goo.gl/pjnqJP)
- Door 
- Antenna 
- Propulsion 

Map obstacles:
- Rocks (can't go through it)
- Wall (can't go through it)
- Sand (robot goes slower) 

Tasks: 

Week 3:
- Make sure everyone is on GIT and knows how to use it.
- Upload the UML diagram to GIT. Possibly edit it to fit new game idea. 
- Get the 6 zones set-up, be able to specify to the robot which zone to go to.
Week 4/5:
- Implement the different map zones from Martin/Tomasz.
- Update the UML diagrams based on the algorithms. (week 4 brief)
- Implement the parts from Aiman into the map. Set locations across the map. Randomized. 
- Create the code behind the different parts: name, type, value etc.
- Create an inventory button/option (possibly press "i" to bring it up. Shows the parts collected.)
- Set up the robot's path-finding: avoiding objects? Might need to be done based on algorithms. 
Week 6: 
- Create a search system where the user specifies what order they find objects in (group requirement 2) perhaps some sort of probe that the robot deploys to locate where the items are and to then go and find them. 
- Set up the robot's path-finding: locating most valuable objects? (group requirement 2)
- Create a system where the user specifies an amount of time to locate a certain item
- Create a sorting system in the ventory, allowing the user to order the items in levels of value and other criteria (group requirements)
- Create a system whereby after the robot runs out of fuel their items collected are displayed on screen. 

Week 7:
- Consult the group requirements and check that all requirements are met. 
- Testing: 
  - Play the game and try to emulate all scenarios.
  - Get somebody else to play it? (106CR)

Long term improvements after basic game implementation:
- A new game/load game/save game option. (sql) (saves robot location + parts it has collected)
- Different levels of difficulty? 

